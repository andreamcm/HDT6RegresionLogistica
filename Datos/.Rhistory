#Asignacion de base de datos a variable
movies <- read.csv("tmdb-movies.csv")
movies <- read.csv("tmdb-movies.csv")
#-----------------------------------------------------------------------------------------------------------------------------------------------
# Librerias a utilizar
library(caret)
library(fmsb)
library(e1071)
library(mlr)
library(dummy)
library(h2o)
library(plyr)
# Set del working directory de Andrea
setwd("~/2019/UVG/Primer Semestre/MinerÃ­a de Datos/Laboratorios/Laboratorio6/HDT6RegresionLogistica/Datos")
# Se cargan todos los datos
datos <- read.csv("train2.csv")
datos <- na.omit(datos)
datos$VelocidadAdopcion <- plyr::revalue(datos$AdoptionSpeed, c("0" = "1", "1" = "1", "2" = "1", "3" = "0", "4" = "0"))
datos$VelocidadAdopcion <- revalue(datos$AdoptionSpeed, c("0" = "1", "1" = "1", "2" = "1", "3" = "0", "4" = "0"))
install.packages("plyr")
library(plyr)
datos$VelocidadAdopcion <- revalue(datos$AdoptionSpeed, c("0" = "1", "1" = "1", "2" = "1", "3" = "0", "4" = "0"))
datos$AdoptionSpeed <- factor(datos$AdoptionSpeed)
datos$VelocidadAdopcion <- revalue(datos$AdoptionSpeed, c("0" = "1", "1" = "1", "2" = "1", "3" = "0", "4" = "0"))
porcentaje<-0.7
set.seed(123)
# Datos de entrenamiento y prueba
corte <- sample(nrow(datos), nrow(datos)*porcentaje)
train <- datos[corte, ]
test <- datos[-corte, ]
datos$Tipo <- revalue(datos$Type, c("1" = "0", "2" = "1"))
datos$Type <- factor(datos$Type)
datos$Tipo <- revalue(datos$Type, c("1" = "0", "2" = "1"))
porcentaje<-0.7
set.seed(123)
# datos<-cbind(datos,dummy(datos,verbose = T))
# Datos de entrenamiento y prueba
corte <- sample(nrow(datos), nrow(datos)*porcentaje)
train <- datos[corte, ]
test <- datos[-corte, ]
modelo <- glm(VelocidadAdopcion ~ Type, data = train, family = binomial(), maxit = 10000)
pred <- predict(modelo, newdata = test, type = "response")
prediccion <- ifelse(pred == 1, 1, 0)
confusionMatrix(as.factor(test$VelocidadAdopcion), as.factor(prediccion))
modelo <- glm(VelocidadAdopcion ~ Tipo, data = train, family = binomial(), maxit = 10000)
pred <- predict(modelo, newdata = test, type = "response")
prediccion <- ifelse(pred == 1, 1, 0)
install.packages("mlr")
library(mlr)
install.packages("e1071")
install.packages("e1071")
install.packages("fmsb")
confusionMatrix(as.factor(test$VelocidadAdopcion), as.factor(prediccion))
library(fmsb)
library(e1071)
library(mlr)
confusionMatrix(as.factor(test$VelocidadAdopcion), as.factor(prediccion))
#-----------------------------------------------------------------------------------------------------------------------------------------------
# Librerias a utilizar
library(caret)
confusionMatrix(as.factor(test$VelocidadAdopcion), as.factor(prediccion))
prediccion
test$VelocidadAdopcion
confusionMatrix(as.factor(test$VelocidadAdopcion), as.factor(prediccion))
